# ktyubeshi <kt.yubeshi@gmail.com>, 2023.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2023-08-26 15:03+0000\n"
"Last-Translator: ktyubeshi <kt.yubeshi@gmail.com>\n"
"Language-Team: Japanese <https://hosted.weblate.org/projects/klipper/features/ja/>\n"
"Language: ja\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.0.1-dev\n"

msgid "Klipper has several compelling features:"
msgstr "Klipper にはいくつかの魅力的な機能があります:"

msgid ""
"Klipper supports printers with multiple micro-controllers. For example, one "
"micro-controller could be used to control an extruder, while another "
"controls the printer's heaters, while a third controls the rest of the "
"printer. The Klipper host software implements clock synchronization to "
"account for clock drift between micro-controllers. No special code is needed"
" to enable multiple micro-controllers - it just requires a few extra lines "
"in the config file."
msgstr ""
"Klipper "
"は複数のマイクロコントローラーを搭載したプリンターをサポートしています。例えば、1つのマイコンをエクストルーダーの制御に使い、別のマイコンはプリンターのヒーターを制御し、3つ目のマイコンはプリンターの残りの部分を制御することができます。クリッパーホストソフトウェアは、マイクロコントローラー間のクロックドリフトを考慮したクロック同期を実装しています。複数のマイコンを有効にするための特別なコードは必要なく、設定ファイルに数行追加するだけです。"

msgid ""
"Configuration via simple config file. There's no need to reflash the micro-"
"controller to change a setting. All of Klipper's configuration is stored in "
"a standard config file which can be easily edited. This makes it easier to "
"setup and maintain the hardware."
msgstr ""
"シンプルなConfigファイルによる設定。 設定を変更するためにマイクロコントローラーをリフラッシュする必要はありません。Klipper "
"の全ての設定は、簡単に編集できる標準の設定ファイルに保存されています。これにより、ハードウェアのセットアップとメンテナンスが容易になります。"

msgid ""
"Klipper supports \"Smooth Pressure Advance\" - a mechanism to account for "
"the effects of pressure within an extruder. This reduces extruder \"ooze\" "
"and improves the quality of print corners. Klipper's implementation does not"
" introduce instantaneous extruder speed changes, which improves overall "
"stability and robustness."
msgstr ""
"Klipper は \"Smooth Pressure Advance\" をサポートしています。 "
"これにより、エクストルーダーの\"にじみ\"が減り、コーナーのプリント品質が向上します。クリッパーの実装は、瞬間的なエクストルーダのスピード変更を行わないため、全体的な安定性と堅牢性が向上します。"

msgid ""
"Klipper supports \"Input Shaping\" to reduce the impact of vibrations on "
"print quality. This can reduce or eliminate \"ringing\" (also known as "
"\"ghosting\", \"echoing\", or \"rippling\") in prints. It may also allow one"
" to obtain faster printing speeds while still maintaining high print "
"quality."
msgstr ""
"Klipper は、印刷品質への振動の影響を軽減する \"Input Shaping\" をサポートしています。これにより、印刷の "
"\"リンギング\"（\"ゴースト\"、\"エコー\"、\"リップリング\"とも呼ばれる）を低減または除去することができます。また、高い印刷品質を維持しながら、より速い印刷速度を得ることができます。"

msgid ""
"Klipper uses an \"iterative solver\" to calculate precise step times from "
"simple kinematic equations. This makes porting Klipper to new types of "
"robots easier and it keeps timing precise even with complex kinematics (no "
"\"line segmentation\" is needed)."
msgstr ""
"Klipper ーは \"反復ソルバー\" "
"を使って、シンプルな運動方程式から正確なステップタイムを計算します。これにより、新しいタイプのロボットへのクリッパーの移植が容易になり、複雑な運動学でも正確なタイミングを保つことができます（\"ラインセグメンテーション\""
" は必要ありません）。"

msgid ""
"Portable code. Klipper works on ARM, AVR, and PRU based micro-controllers. "
"Existing \"reprap\" style printers can run Klipper without hardware "
"modification - just add a Raspberry Pi. Klipper's internal code layout makes"
" it easier to support other micro-controller architectures as well."
msgstr ""
"ポータブルコード。 Klipper はARM、AVR、PRUベースのマイクロコントローラーで動作します。既存の \"reprap\" "
"スタイルのプリンターは、ハードウェアを変更することなく、Raspberry "
"Piを追加するだけでKlipperを動かすことができます。Klipperの内部コードレイアウトは、他のマイクロコントローラ・アーキテクチャのサポートも容易にしています。"

msgid ""
"Simpler code. Klipper uses a very high level language (Python) for most "
"code. The kinematics algorithms, the G-code parsing, the heating and "
"thermistor algorithms, etc. are all written in Python. This makes it easier "
"to develop new functionality."
msgstr ""
"よりシンプルなコード。Klipper "
"は、ほとんどのコードに非常に高度な言語（Python）を使用しています。運動学アルゴリズム、Gコード解析、加熱とサーミスタのアルゴリズムなど、すべてがPythonで書かれています。これにより、新機能の開発が容易になります。"

msgid ""
"Custom programmable macros. New G-Code commands can be defined in the "
"printer config file (no code changes are necessary). Those commands are "
"programmable - allowing them to produce different actions depending on the "
"state of the printer."
msgstr ""
"カスタムのプログラマブルなマクロ。 新しいGコードコマンドをプリンタの設定ファイルで定義できます（コードの変更は不要です）。 "
"これらのコマンドはプログラマブルで、プリンタの状態に応じて異なるアクションを生成できます。"

msgid ""
"Builtin API server. In addition to the standard G-Code interface, Klipper "
"supports a rich JSON based application interface. This enables programmers "
"to build external applications with detailed control of the printer."
msgstr ""
"ビルトイン API サーバー。標準的なGコードインターフェースに加え、Klipper "
"はリッチなJSONベースのアプリケーションインターフェースをサポートしています。 "
"これにより、プログラマーはプリンターを詳細に制御できる外部アプリケーションを構築できます。"

msgid "Additional features"
msgstr "その他の特徴"

msgid "Klipper supports many standard 3d printer features:"
msgstr "Klipperは多くの標準的な3dプリンター機能をサポートしています："

msgid ""
"Support for multiple extruders. Extruders with shared heaters and extruders "
"on independent carriages (IDEX) are also supported."
msgstr "複数のエクストルーダをサポート。 ヒーターを共有する押出機や独立キャリッジ（IDEX）上のエクストルーダもサポートしています。"

msgid ""
"Automatic bed leveling support. Klipper can be configured for basic bed tilt"
" detection or full mesh bed leveling. If the bed uses multiple Z steppers "
"then Klipper can also level by independently manipulating the Z steppers. "
"Most Z height probes are supported, including BL-Touch probes and servo "
"activated probes."
msgstr ""
"自動ベッドレベリングサポート。 Klipper "
"は、基本的なベッドの傾き検出、またはフルメッシュのベッドレベリングに構成できます。ベッドが複数のZステッパーを使用している場合、クリッパーはZステッパーを個別に操作してレベリングすることもできます。BLタッチプローブやサーボ式プローブなど、ほとんどのZハイトプローブに対応しています。"

msgid ""
"Automatic delta calibration support. The calibration tool can perform basic "
"height calibration as well as an enhanced X and Y dimension calibration. The"
" calibration can be done with a Z height probe or via manual probing."
msgstr ""
"自動デルタキャリブレーションをサポート。キャリブレーションツールは、基本的な高さのキャリブレーションだけでなく、XおよびY寸法の拡張キャリブレーションも実行できます。キャリブレーションは、Z高さプローブまたは手動プローブを使用して行うことができます。"

msgid "Basic thermal heater protection enabled by default."
msgstr "基本的なサーマルヒーター保護はデフォルトで有効。"

msgid ""
"Support for common LCD displays attached directly to the printer. A default "
"menu is also available. The contents of the display and menu can be fully "
"customized via the config file."
msgstr ""
"プリンタに直接取り付けられた一般的なLCDディスプレイをサポート。デフォルトメニューも用意されています。ディスプレイとメニューの内容は、Configファイルで完全にカスタマイズできます。"

msgid ""
"Constant acceleration and \"look-ahead\" support. All printer moves will "
"gradually accelerate from standstill to cruising speed and then decelerate "
"back to a standstill. The incoming stream of G-Code movement commands are "
"queued and analyzed - the acceleration between movements in a similar "
"direction will be optimized to reduce print stalls and improve overall print"
" time."
msgstr ""
"定加速と \"look-ahead\" (先読み) "
"サポート。すべてのプリンター動作は、停止状態から巡航速度まで徐々に加速し、その後減速して停止状態に戻ります。入力されるGコード移動コマンドのストリームはキューに入れられ、分析されます。同じ方向の移動間の加速は、印刷ストールを減らし、全体的な印刷時間を改善するために最適化されます。"

msgid ""
"Klipper implements a \"stepper phase endstop\" algorithm that can improve "
"the accuracy of typical endstop switches. When properly tuned it can improve"
" a print's first layer bed adhesion."
msgstr ""
"Klipper は、一般的なエンドストップスイッチの精度を向上させる \"stepper phase endstop\" "
"アルゴリズムを実装しています。適切に調整された場合、印刷の1層目のベッド密着性を向上させることができます。"

msgid ""
"Support for limiting the top speed of short \"zigzag\" moves to reduce "
"printer vibration and noise. See the [kinematics](Kinematics.md) document "
"for more information."
msgstr ""
"プリンタの振動とノイズを低減するために、短いジグザグ移動の最高速度を制限する機能をサポートしました。詳しくは "
"[kinematics](Kinematics.md) ドキュメントを参照してください。"

msgid ""
"Sample configuration files are available for many common printers. Check the"
" [config directory](../config/) for a list."
msgstr ""
"多くの一般的なプリンターについて、サンプル設定ファイルが用意されています。[config ディレクトリ](../config/)に一覧があります。"

msgid ""
"To get started with Klipper, read the [installation](Installation.md) guide."
msgstr "Klipperを使い始めるには、[installation](Installation.md) ガイドをお読みください。"

msgid "Step Benchmarks"
msgstr "ステップ・ベンチマーク"

msgid ""
"Below are the results of stepper performance tests. The numbers shown "
"represent total number of steps per second on the micro-controller."
msgstr "以下はステッパー性能テストの結果です。表示されている数字は、マイクロコントローラーの1秒あたりの総ステップ数を表しています。"

msgid "Micro-controller"
msgstr "マイクロコントローラ"

msgid "3 steppers active"
msgstr "3 steppers active"

msgid "16Mhz AVR"
msgstr "16Mhz AVR"

msgid "20Mhz AVR"
msgstr "20Mhz AVR"

msgid "Beaglebone PRU"
msgstr "Beaglebone PRU"

msgid "686K"
msgstr "686K"

#: docs/Features.md:block 1 (header)
msgid "Features"
msgstr "特徴"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Standard G-Code support. Common g-code commands that are produced by typical"
" \"slicers\" (SuperSlicer, Cura, PrusaSlicer, etc.) are supported."
msgstr ""
"標準的なGコードのサポート。 "
"典型的な\"スライサー\"（SuperSlicer、Cura、PrusaSlicerなど）で生成される一般的なGコードコマンドがサポートされています。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for common temperature sensors (eg, common thermistors, AD595, "
"AD597, AD849x, PT100, PT1000, MAX6675, MAX31855, MAX31856, MAX31865, BME280,"
" HTU21D, DS18B20, and LM75). Custom thermistors and custom analog "
"temperature sensors can also be configured. One can monitor the internal "
"micro-controller temperature sensor and the internal temperature sensor of a"
" Raspberry Pi."
msgstr ""
"一般的な温度センサをサポート（例：一般的なサーミスタ、AD595、AD597、AD849x、PT100、PT1000、MAX6675、MAX31855、MAX31856、MAX31865、BME280、HTU21D、DS18B20、LM75）。カスタム・サーミスタやカスタム・アナログ温度センサも設定可能です。マイクロコントローラー内部の温度センサーやRaspberry"
" Piの内部温度センサーをモニターすることもできます。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for standard fans, nozzle fans, and temperature controlled fans. No "
"need to keep fans running when the printer is idle. Fan speed can be "
"monitored on fans that have a tachometer."
msgstr ""
"標準ファン、ノズルファン、温度制御ファンをサポート。プリンターのアイドル時にファンを回し続ける必要がありません。タコメーター付きのファンでは、ファンの回転数をモニターできます。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for filament presence sensors, filament motion sensors, and filament"
" width sensors."
msgstr "フィラメント有無センサー、フィラメントモーションセンサー、フィラメント幅センサーをサポート。"

#: docs/Features.md:block 10 (table)
msgid "1 stepper active"
msgstr "1 stepper active"

#: docs/Features.md:block 10 (table)
msgid "157K"
msgstr "157K"

#: docs/Features.md:block 10 (table)
msgid "99K"
msgstr "99K"

#: docs/Features.md:block 10 (table)
msgid "196K"
msgstr "196K"

#: docs/Features.md:block 10 (table)
msgid "123K"
msgstr "123K"

#: docs/Features.md:block 10 (table)
msgid "471K"
msgstr "471K"

#: docs/Features.md:block 10 (table)
msgid "STM32F042"
msgstr "STM32F042"

#: docs/Features.md:block 10 (table)
msgid "814K"
msgstr "814K"

#: docs/Features.md:block 10 (table)
msgid "578K"
msgstr "578K"

#: docs/Features.md:block 10 (table)
msgid "866K"
msgstr "866K"

#: docs/Features.md:block 10 (table)
msgid "708K"
msgstr "708K"

#: docs/Features.md:block 10 (table)
msgid "1180K"
msgstr "1180K"

#: docs/Features.md:block 10 (table)
msgid "818K"
msgstr "818K"

#: docs/Features.md:block 10 (table)
msgid "1273K"
msgstr "1273K"

#: docs/Features.md:block 10 (table)
msgid "981K"
msgstr "981K"

#: docs/Features.md:block 10 (table)
msgid "1690K"
msgstr "1690K"

#: docs/Features.md:block 10 (table)
msgid "1385K"
msgstr "1385K"

#: docs/Features.md:block 10 (table)
msgid "1923K"
msgstr "1923K"

#: docs/Features.md:block 10 (table)
msgid "1351K"
msgstr "1351K"

#: docs/Features.md:block 10 (table)
msgid "2353K"
msgstr "2353K"

#: docs/Features.md:block 10 (table)
msgid "1622K"
msgstr "1622K"

#: docs/Features.md:block 10 (table)
msgid "2400K"
msgstr "2400K"

#: docs/Features.md:block 10 (table)
msgid "1636K"
msgstr "1636K"

#: docs/Features.md:block 10 (table)
msgid "2500K"
msgstr "2500K"

#: docs/Features.md:block 10 (table)
msgid "1674K"
msgstr "1674K"

#: docs/Features.md:block 10 (table)
msgid "3077K"
msgstr "3077K"

#: docs/Features.md:block 10 (table)
msgid "1885K"
msgstr "1885K"

#: docs/Features.md:block 10 (table)
msgid "3652K"
msgstr "3652K"

#: docs/Features.md:block 10 (table)
msgid "2459K"
msgstr "2459K"

#: docs/Features.md:block 10 (table)
msgid "3913K"
msgstr "3913K"

#: docs/Features.md:block 10 (table)
msgid "2634K"
msgstr "2634K"

#: docs/Features.md:block 11 (paragraph)
msgid ""
"Further details on the benchmarks are available in the [Benchmarks "
"document](Benchmarks.md)."
msgstr "ベンチマークの詳細については、[ベンチマーク・ドキュメント](Benchmarks.md)を参照してください。"

#: docs/Features.md:block 10 (table)
msgid "STM32G0B1"
msgstr "STM32G0B1"

#: docs/Features.md:block 10 (table)
msgid "1103K"
msgstr "1103K"

#: docs/Features.md:block 10 (table)
msgid "790K"
msgstr "790K"

#: docs/Features.md:block 10 (table)
msgid "SAMD21"
msgstr "SAMD21"

#: docs/Features.md:block 10 (table)
msgid "STM32F103"
msgstr "STM32F103"

#: docs/Features.md:block 10 (table)
msgid "SAM3X8E"
msgstr "SAM3X8E"

#: docs/Features.md:block 10 (table)
msgid "SAM4S8C"
msgstr "SAM4S8C"

#: docs/Features.md:block 10 (table)
msgid "LPC1768"
msgstr "LPC1768"

#: docs/Features.md:block 10 (table)
msgid "LPC1769"
msgstr "LPC1769"

#: docs/Features.md:block 10 (table)
msgid "RP2040"
msgstr "RP2040"

#: docs/Features.md:block 10 (table)
msgid "SAM4E8E"
msgstr "SAM4E8E"

#: docs/Features.md:block 10 (table)
msgid "SAMD51"
msgstr "SAMD51"

#: docs/Features.md:block 10 (table)
msgid "STM32F407"
msgstr "STM32F407"

#: docs/Features.md:block 10 (table)
msgid "STM32F446"
msgstr "STM32F446"

#: docs/Features.md:block 11 (paragraph)
msgid ""
"If unsure of the micro-controller on a particular board, find the "
"appropriate [config file](../config/), and look for the micro-controller "
"name in the comments at the top of that file."
msgstr ""
"特定のボードのマイクロコントローラーがわからない場合は、適切な [configファイル](../config/) "
"を見つけて、そのファイルの先頭にあるコメントからマイクロコントローラーの名前を探してください。"

#: docs/Features.md:block 10 (table)
msgid "STM32H743"
msgstr "STM32H743"

#: docs/Features.md:block 10 (table)
msgid "9091K"
msgstr "9091K"

#: docs/Features.md:block 10 (table)
msgid "6061K"
msgstr "6061K"

#: docs/Features.md:block 3 (unordered list)
msgid ""
"High precision stepper movement. Klipper utilizes an application processor "
"(such as a low-cost Raspberry Pi) when calculating printer movements. The "
"application processor determines when to step each stepper motor, it "
"compresses those events, transmits them to the micro-controller, and then "
"the micro-controller executes each event at the requested time. Each stepper"
" event is scheduled with a precision of 25 micro-seconds or better. The "
"software does not use kinematic estimations (such as the Bresenham "
"algorithm) - instead it calculates precise step times based on the physics "
"of acceleration and the physics of the machine kinematics. More precise "
"stepper movement provides quieter and more stable printer operation."
msgstr ""
"高精度のステッパー動作。 Klipperは、プリンターの動きを計算する際に、アプリケーションプロセッサ（低価格のRaspberry "
"Piなど）を利用します。アプリケーションプロセッサは、各ステッピングモータをいつステップさせるかを決定し、それらのイベントを圧縮してマイクロコントローラに送信し、マイクロコントローラが要求された時間に各イベントを実行します。各ステッパーイベントは、25マイクロ秒以上の精度でスケジュールされます。このソフトウェアは（ブレゼンハムのアルゴリズムのような）運動学的推定を使用せず、加速の物理学と機械の運動学の物理学に基づいて正確なステップ時間を計算します。より正確なステッパー動作は、より静かで安定したプリンター動作を提供します。"

#: docs/Features.md:block 3 (unordered list)
msgid ""
"Klipper is hardware agnostic. One should get the same precise timing "
"independent of the low-level electronics hardware. The Klipper micro-"
"controller code is designed to faithfully follow the schedule provided by "
"the Klipper host software (or prominently alert the user if it is unable "
"to). This makes it easier to use available hardware, to upgrade to new "
"hardware, and to have confidence in the hardware."
msgstr ""
"Klipper "
"はハードウェアにとらわれません。ローレベルのエレクトロニクス・ハードウェアとは無関係に、同じ正確なタイミングを得ることができるはずです。Klipper "
"マイクロコントローラーのコードは、Klipper "
"ホスト・ソフトウェアが提供するスケジュールに忠実に従うように設計されています。これにより、利用可能なハードウェアの使用や、新しいハードウェアへのアップグレードが容易になり、ハードウェアへの信頼が高まります。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Several web interfaces available. Works with Mainsail, Fluidd, OctoPrint and"
" others. This allows the printer to be controlled using a regular web-"
"browser. The same Raspberry Pi that runs Klipper can also run the web "
"interface."
msgstr ""
"いくつかのウェブインターフェースを利用可能。 Mainsail、Fluidd、OctoPrint "
"などで動作します。これにより、通常のウェブブラウザを使ってプリンターを制御することができます。Klipperを動かすのと同じRaspberry "
"Piでもウェブインターフェースを動かすことができます。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for cartesian, delta, corexy, corexz, hybrid-corexy, hybrid-corexz, "
"deltesian, rotary delta, polar, and cable winch style printers."
msgstr ""
"Cartesian(デカルト式), Delta, CoreXY, CoreXZ, Hybrid-CoreXY, Hybrid-CoreXZ, "
"Deltesian, Rotary Delta, Polar, Cable Winch Style のプリンタに対応しています。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Run-time \"exclude object\" support. When configured, this module may "
"facilitate canceling of just one object in a multi-part print."
msgstr ""
"印刷中の \"exclude object\" サポート。 "
"このモジュールが設定されている場合、マルチパート印刷の1つのオブジェクトだけをキャンセルすることができます。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for run-time configuration of TMC2130, TMC2208/TMC2224, TMC2209, "
"TMC2660, and TMC5160 stepper motor drivers. There is also support for "
"current control of traditional stepper drivers via AD5206, DAC084S085, "
"MCP4451, MCP4728, MCP4018, and PWM pins."
msgstr ""
"TMC2130、TMC2208/TMC2224、TMC2209、TMC2660、およびTMC5160ステッパ・モータ・ドライバのランタイム・コンフィギュレーションをサポートします。また、AD5206、DAC084S085、MCP4451、MCP4728、MCP4018、PWMピンを介した従来のステッパ・ドライバの電流制御もサポートしています。"

#: docs/Features.md:block 6 (unordered list)
msgid ""
"Support for measuring and recording acceleration using an adxl345, mpu9250, "
"and mpu6050 accelerometers."
msgstr "adxl345、mpu9250、mpu6050加速度センサーを使用した加速度の測定と記録をサポート。"

#: docs/Features.md:block 3 (unordered list)
msgid ""
"Best in class performance. Klipper is able to achieve high stepping rates on"
" both new and old micro-controllers. Even old 8-bit micro-controllers can "
"obtain rates over 175K steps per second. On more recent micro-controllers, "
"several million steps per second are possible. Higher stepper rates enable "
"higher print velocities. The stepper event timing remains precise even at "
"high speeds which improves overall stability."
msgstr ""
"クラス最高のパフォーマンス。 Klipper "
"は、新旧どちらのマイコンでも高いステップレートを実現できます。古い8ビットマイコンでも、毎秒175Kステップを超える速度を得ることができます。最近のマイコンでは、毎秒数百万ステップも可能です。ステッパー・レートが高いほど、印刷速度が速くなります。ステッパーイベントのタイミングは、高速でも正確なままであるため、全体的な安定性が向上します。"

#: docs/Features.md:block 10 (table)
msgid "AR100"
msgstr "AR100"

#: docs/Features.md:block 10 (table)
msgid "3529K"
msgstr "3529K"

#: docs/Features.md:block 10 (table)
msgid "2507K"
msgstr "2507K"

#~ msgid ""
#~ "Best in class performance. Klipper is able to achieve high stepping rates on"
#~ " both new and old micro-controllers. Even old 8bit micro-controllers can "
#~ "obtain rates over 175K steps per second. On more recent micro-controllers, "
#~ "several million steps per second are possible. Higher stepper rates enable "
#~ "higher print velocities. The stepper event timing remains precise even at "
#~ "high speeds which improves overall stability."
#~ msgstr ""

#~ msgid ""
#~ "High precision stepper movement. Klipper utilizes an application processor "
#~ "(such as a low-cost Raspberry Pi) when calculating printer movements. The "
#~ "application processor determines when to step each stepper motor, it "
#~ "compresses those events, transmits them to the micro-controller, and then "
#~ "the micro-controller executes each event at the requested time. Each stepper"
#~ " event is scheduled with a precision of 25 micro-seconds or better. The "
#~ "software does not use kinematic estimations (such as the Bresenham "
#~ "algorithm) - instead it calculates precise step times based on the physics "
#~ "of acceleration and the physics of the machine kinematics. More precise "
#~ "stepper movement translates to quieter and more stable printer operation."
#~ msgstr ""

#~ msgid ""
#~ "Works with Octoprint. This allows the printer to be controlled using a "
#~ "regular web-browser. The same Raspberry Pi that runs Klipper can also run "
#~ "Octoprint."
#~ msgstr ""

#~ msgid ""
#~ "Support for run-time configuration of TMC2130, TMC2208/TMC2224, TMC2209, "
#~ "TMC2660, and TMC5160 stepper motor drivers. There is also support for "
#~ "current control of traditional stepper drivers via AD5206, MCP4451, MCP4728,"
#~ " MCP4018, and PWM pins."
#~ msgstr ""

#~ msgid ""
#~ "Support for measuring and recording acceleration using an adxl345 "
#~ "accelerometer."
#~ msgstr ""

#~ msgid ""
#~ "Support for cartesian, delta, corexy, corexz, hybrid-corexy, hybrid-corexz, "
#~ "rotary delta, polar, and cable winch style printers."
#~ msgstr ""

#~ msgid "Arduino Zero (SAMD21)"
#~ msgstr ""

#~ msgid "\"Blue Pill\" (STM32F103)"
#~ msgstr ""

#~ msgid "Arduino Due (SAM3X8E)"
#~ msgstr ""

#~ msgid "Duet2 Maestro (SAM4S8C)"
#~ msgstr ""

#~ msgid "Smoothieboard (LPC1768)"
#~ msgstr ""

#~ msgid "Smoothieboard (LPC1769)"
#~ msgstr ""

#~ msgid "Duet2 Wifi/Eth (SAM4E8E)"
#~ msgstr ""

#~ msgid "Adafruit Metro M4 (SAMD51)"
#~ msgstr ""

#~ msgid "BigTreeTech SKR Pro (STM32F407)"
#~ msgstr ""

#~ msgid "Raspberry Pi Pico (RP2040)"
#~ msgstr ""

#~ msgid "Fysetc Spider (STM32F446)"
#~ msgstr ""

#~ msgid ""
#~ "Best in class performance. Klipper is able to achieve high stepping rates on"
#~ " both new and old micro-controllers. Even old 8bit micro-controllers can "
#~ "obtain rates over 175K steps per second. On more recent micro-controllers, "
#~ "rates over 500K steps per second are possible. Higher stepper rates enable "
#~ "higher print velocities. The stepper event timing remains precise even at "
#~ "high speeds which improves overall stability."
#~ msgstr ""

#~ msgid "Fastest step rate"
#~ msgstr ""

#~ msgid "154K"
#~ msgstr ""

#~ msgid "102K"
#~ msgstr ""

#~ msgid "192K"
#~ msgstr ""

#~ msgid "127K"
#~ msgstr ""

#~ msgid "234K"
#~ msgstr ""

#~ msgid "217K"
#~ msgstr ""

#~ msgid "387K"
#~ msgstr ""

#~ msgid "360K"
#~ msgstr ""

#~ msgid "438K"
#~ msgstr ""

#~ msgid "564K"
#~ msgstr ""

#~ msgid "574K"
#~ msgstr ""

#~ msgid "661K"
#~ msgstr ""

#~ msgid "680K"
#~ msgstr ""

#~ msgid "761K"
#~ msgstr ""

#~ msgid "692K"
#~ msgstr ""

#~ msgid "922K"
#~ msgstr ""

#~ msgid "711K"
#~ msgstr ""

#~ msgid ""
#~ "On AVR platforms, the highest achievable step rate is with just one stepper "
#~ "stepping. On the SAMD21 and STM32F103 the highest step rate is with two "
#~ "simultaneous steppers stepping. On the SAM3X8E, SAM4S8C, SAM4E8E, LPC176x, "
#~ "and PRU the highest step rate is with three simultaneous steppers. On the "
#~ "SAMD51 and STM32F4 the highest step rate is with four simultaneous steppers."
#~ " (Further details on the benchmarks are available in the [Benchmarks "
#~ "document](Benchmarks.md).)"
#~ msgstr ""

#~ msgid ""
#~ "Standard G-Code support. Common g-code commands that are produced by typical"
#~ " \"slicers\" are supported. One may continue to use Slic3r, Cura, etc. with "
#~ "Klipper."
#~ msgstr ""

#~ msgid ""
#~ "Support for cartesian, delta, corexy, corexz, rotary delta, polar, and cable"
#~ " winch style printers."
#~ msgstr ""

#~ msgid ""
#~ "Support for common temperature sensors (eg, common thermistors, AD595, "
#~ "AD597, AD849x, PT100, PT1000, MAX6675, MAX31855, MAX31856, MAX31865, BME280,"
#~ " HTU21D, and LM75). Custom thermistors and custom analog temperature sensors"
#~ " can also be configured."
#~ msgstr ""

#~ msgid ""
#~ "Support for standard fans, nozzle fans, and temperature controlled fans. No "
#~ "need to keep fans running when the printer is idle."
#~ msgstr ""
